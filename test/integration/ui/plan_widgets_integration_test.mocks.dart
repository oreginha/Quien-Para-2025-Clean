// Mocks generated by Mockito 5.4.5 from annotations
// in quien_para/test/integration/ui/plan_widgets_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i7;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i6;
import 'package:firebase_core/firebase_core.dart' as _i5;
import 'package:flutter_bloc/flutter_bloc.dart' as _i16;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;
import 'package:quien_para/domain/entities/failure.dart' as _i12;
import 'package:quien_para/domain/entities/plan/plan_entity.dart' as _i11;
import 'package:quien_para/domain/entities/plan/plan_with_creator_entity.dart'
    as _i10;
import 'package:quien_para/domain/failures/app_failures.dart' as _i9;
import 'package:quien_para/domain/repositories/plan/plan_repository.dart'
    as _i8;
import 'package:quien_para/domain/usecases/plan/get_plan_by_id_usecase.dart'
    as _i13;
import 'package:quien_para/presentation/bloc/plan/plan_bloc.dart' as _i14;
import 'package:quien_para/presentation/bloc/plan/plan_event.dart' as _i15;
import 'package:quien_para/presentation/bloc/plan/plan_state.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlanState_1 extends _i1.SmartFake implements _i3.PlanState {
  _FakePlanState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamSubscription_2<T1> extends _i1.SmartFake
    implements _i4.StreamSubscription<T1> {
  _FakeStreamSubscription_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_3 extends _i1.SmartFake implements _i5.FirebaseApp {
  _FakeFirebaseApp_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_4 extends _i1.SmartFake
    implements _i6.ActionCodeInfo {
  _FakeActionCodeInfo_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_5 extends _i1.SmartFake
    implements _i7.UserCredential {
  _FakeUserCredential_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_6 extends _i1.SmartFake
    implements _i7.ConfirmationResult {
  _FakeConfirmationResult_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_7 extends _i1.SmartFake implements _i6.UserMetadata {
  _FakeUserMetadata_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_8 extends _i1.SmartFake implements _i7.MultiFactor {
  _FakeMultiFactor_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_9 extends _i1.SmartFake implements _i6.IdTokenResult {
  _FakeIdTokenResult_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_10 extends _i1.SmartFake implements _i7.User {
  _FakeUser_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PlanRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlanRepository extends _i1.Mock implements _i8.PlanRepository {
  MockPlanRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i2.Either<_i9.AppFailure, List<_i10.PlanWithCreatorEntity>>>
      getPlansWithCreators() => (super.noSuchMethod(
            Invocation.method(
              #getPlansWithCreators,
              [],
            ),
            returnValue: _i4.Stream<
                _i2.Either<_i9.AppFailure,
                    List<_i10.PlanWithCreatorEntity>>>.empty(),
          ) as _i4.Stream<
              _i2.Either<_i9.AppFailure, List<_i10.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>> matchPlan(String? planId) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchPlan,
          [planId],
        ),
        returnValue: _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>>.value(
            _FakeEither_0<_i9.AppFailure, _i2.Unit>(
          this,
          Invocation.method(
            #matchPlan,
            [planId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>> unlikePlan(String? planId) =>
      (super.noSuchMethod(
        Invocation.method(
          #unlikePlan,
          [planId],
        ),
        returnValue: _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>>.value(
            _FakeEither_0<_i9.AppFailure, _i2.Unit>(
          this,
          Invocation.method(
            #unlikePlan,
            [planId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>>);

  @override
  _i4.Future<
      _i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>> getPlansByUserId(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlansByUserId,
          [userId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>.value(
                _FakeEither_0<_i9.AppFailure, List<_i11.PlanEntity>>(
          this,
          Invocation.method(
            #getPlansByUserId,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>> getParticipatingPlans(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getParticipatingPlans,
          [userId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>.value(
                _FakeEither_0<_i9.AppFailure, List<_i11.PlanEntity>>(
          this,
          Invocation.method(
            #getParticipatingPlans,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>);

  @override
  _i4.Stream<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>
      getOtherUserPlansStream({
    required String? currentUserId,
    int? limit = 20,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getOtherUserPlansStream,
              [],
              {
                #currentUserId: currentUserId,
                #limit: limit,
              },
            ),
            returnValue: _i4.Stream<
                _i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>.empty(),
          ) as _i4.Stream<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>> refreshOtherUserPlans({
    required String? currentUserId,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshOtherUserPlans,
          [],
          {
            #currentUserId: currentUserId,
            #limit: limit,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>>.value(
            _FakeEither_0<_i9.AppFailure, _i2.Unit>(
          this,
          Invocation.method(
            #refreshOtherUserPlans,
            [],
            {
              #currentUserId: currentUserId,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>>);

  @override
  _i4.Future<
      _i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>> getPlansByCategory(
    String? category, {
    int? limit,
    String? lastDocumentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlansByCategory,
          [category],
          {
            #limit: limit,
            #lastDocumentId: lastDocumentId,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>.value(
                _FakeEither_0<_i9.AppFailure, List<_i11.PlanEntity>>(
          this,
          Invocation.method(
            #getPlansByCategory,
            [category],
            {
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>> getNearbyPlans({
    required double? latitude,
    required double? longitude,
    required double? radiusKm,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNearbyPlans,
          [],
          {
            #latitude: latitude,
            #longitude: longitude,
            #radiusKm: radiusKm,
            #limit: limit,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>.value(
                _FakeEither_0<_i9.AppFailure, List<_i11.PlanEntity>>(
          this,
          Invocation.method(
            #getNearbyPlans,
            [],
            {
              #latitude: latitude,
              #longitude: longitude,
              #radiusKm: radiusKm,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>> getPopularPlans({
    int? limit,
    String? lastDocumentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularPlans,
          [],
          {
            #limit: limit,
            #lastDocumentId: lastDocumentId,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>.value(
                _FakeEither_0<_i9.AppFailure, List<_i11.PlanEntity>>(
          this,
          Invocation.method(
            #getPopularPlans,
            [],
            {
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>> getRecommendedPlans({
    required String? userId,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendedPlans,
          [],
          {
            #userId: userId,
            #limit: limit,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>.value(
                _FakeEither_0<_i9.AppFailure, List<_i11.PlanEntity>>(
          this,
          Invocation.method(
            #getRecommendedPlans,
            [],
            {
              #userId: userId,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>> searchPlansByText(
    String? searchText, {
    int? limit,
    String? lastDocumentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPlansByText,
          [searchText],
          {
            #limit: limit,
            #lastDocumentId: lastDocumentId,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>.value(
                _FakeEither_0<_i9.AppFailure, List<_i11.PlanEntity>>(
          this,
          Invocation.method(
            #searchPlansByText,
            [searchText],
            {
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>> searchPlans({
    required String? query,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPlans,
          [],
          {
            #query: query,
            #limit: limit,
            #lastDocumentId: lastDocumentId,
          },
        ),
        returnValue: _i4.Future<
                _i2
                .Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>.value(
            _FakeEither_0<_i12.Failure, List<_i10.PlanWithCreatorEntity>>(
          this,
          Invocation.method(
            #searchPlans,
            [],
            {
              #query: query,
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            },
          ),
        )),
      ) as _i4
          .Future<_i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, List<String>>> getSearchSuggestions({
    required String? query,
    int? limit = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSearchSuggestions,
          [],
          {
            #query: query,
            #limit: limit,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i12.Failure, List<String>>>.value(
            _FakeEither_0<_i12.Failure, List<String>>(
          this,
          Invocation.method(
            #getSearchSuggestions,
            [],
            {
              #query: query,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i12.Failure, List<String>>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>
      filterPlansByLocation({
    required double? latitude,
    required double? longitude,
    required double? radiusKm,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #filterPlansByLocation,
              [],
              {
                #latitude: latitude,
                #longitude: longitude,
                #radiusKm: radiusKm,
                #limit: limit,
                #lastDocumentId: lastDocumentId,
              },
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i12.Failure,
                        List<_i10.PlanWithCreatorEntity>>>.value(
                _FakeEither_0<_i12.Failure, List<_i10.PlanWithCreatorEntity>>(
              this,
              Invocation.method(
                #filterPlansByLocation,
                [],
                {
                  #latitude: latitude,
                  #longitude: longitude,
                  #radiusKm: radiusKm,
                  #limit: limit,
                  #lastDocumentId: lastDocumentId,
                },
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, Map<String, dynamic>>> getCityCoordinates(
          String? cityName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCityCoordinates,
          [cityName],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i12.Failure, Map<String, dynamic>>>.value(
                _FakeEither_0<_i12.Failure, Map<String, dynamic>>(
          this,
          Invocation.method(
            #getCityCoordinates,
            [cityName],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i12.Failure, Map<String, dynamic>>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>
      filterPlansByDateRange({
    required DateTime? startDate,
    required DateTime? endDate,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #filterPlansByDateRange,
              [],
              {
                #startDate: startDate,
                #endDate: endDate,
                #limit: limit,
                #lastDocumentId: lastDocumentId,
              },
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i12.Failure,
                        List<_i10.PlanWithCreatorEntity>>>.value(
                _FakeEither_0<_i12.Failure, List<_i10.PlanWithCreatorEntity>>(
              this,
              Invocation.method(
                #filterPlansByDateRange,
                [],
                {
                  #startDate: startDate,
                  #endDate: endDate,
                  #limit: limit,
                  #lastDocumentId: lastDocumentId,
                },
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>
      filterPlansByCategory({
    required String? category,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #filterPlansByCategory,
              [],
              {
                #category: category,
                #limit: limit,
                #lastDocumentId: lastDocumentId,
              },
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i12.Failure,
                        List<_i10.PlanWithCreatorEntity>>>.value(
                _FakeEither_0<_i12.Failure, List<_i10.PlanWithCreatorEntity>>(
              this,
              Invocation.method(
                #filterPlansByCategory,
                [],
                {
                  #category: category,
                  #limit: limit,
                  #lastDocumentId: lastDocumentId,
                },
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>
      filterPlansByMultipleCategories({
    required List<String>? categories,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #filterPlansByMultipleCategories,
              [],
              {
                #categories: categories,
                #limit: limit,
                #lastDocumentId: lastDocumentId,
              },
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i12.Failure,
                        List<_i10.PlanWithCreatorEntity>>>.value(
                _FakeEither_0<_i12.Failure, List<_i10.PlanWithCreatorEntity>>(
              this,
              Invocation.method(
                #filterPlansByMultipleCategories,
                [],
                {
                  #categories: categories,
                  #limit: limit,
                  #lastDocumentId: lastDocumentId,
                },
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>
      getPopularPlansByCategory({
    required String? category,
    int? limit = 10,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getPopularPlansByCategory,
              [],
              {
                #category: category,
                #limit: limit,
              },
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i12.Failure,
                        List<_i10.PlanWithCreatorEntity>>>.value(
                _FakeEither_0<_i12.Failure, List<_i10.PlanWithCreatorEntity>>(
              this,
              Invocation.method(
                #getPopularPlansByCategory,
                [],
                {
                  #category: category,
                  #limit: limit,
                },
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, List<String>>> getSuggestedCategories({
    required String? userId,
    int? limit = 3,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSuggestedCategories,
          [],
          {
            #userId: userId,
            #limit: limit,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i12.Failure, List<String>>>.value(
            _FakeEither_0<_i12.Failure, List<String>>(
          this,
          Invocation.method(
            #getSuggestedCategories,
            [],
            {
              #userId: userId,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i12.Failure, List<String>>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>
      searchPlansAdvanced({
    String? query,
    String? category,
    double? latitude,
    double? longitude,
    double? radiusKm,
    DateTime? startDate,
    DateTime? endDate,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #searchPlansAdvanced,
              [],
              {
                #query: query,
                #category: category,
                #latitude: latitude,
                #longitude: longitude,
                #radiusKm: radiusKm,
                #startDate: startDate,
                #endDate: endDate,
                #limit: limit,
                #lastDocumentId: lastDocumentId,
              },
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i12.Failure,
                        List<_i10.PlanWithCreatorEntity>>>.value(
                _FakeEither_0<_i12.Failure, List<_i10.PlanWithCreatorEntity>>(
              this,
              Invocation.method(
                #searchPlansAdvanced,
                [],
                {
                  #query: query,
                  #category: category,
                  #latitude: latitude,
                  #longitude: longitude,
                  #radiusKm: radiusKm,
                  #startDate: startDate,
                  #endDate: endDate,
                  #limit: limit,
                  #lastDocumentId: lastDocumentId,
                },
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i12.Failure, List<_i10.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, _i2.Unit>> saveSearchToHistory({
    required String? userId,
    required String? query,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSearchToHistory,
          [],
          {
            #userId: userId,
            #query: query,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i12.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i12.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #saveSearchToHistory,
            [],
            {
              #userId: userId,
              #query: query,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i12.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, List<String>>> getSearchHistory({
    required String? userId,
    int? limit = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSearchHistory,
          [],
          {
            #userId: userId,
            #limit: limit,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i12.Failure, List<String>>>.value(
            _FakeEither_0<_i12.Failure, List<String>>(
          this,
          Invocation.method(
            #getSearchHistory,
            [],
            {
              #userId: userId,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i12.Failure, List<String>>>);

  @override
  _i4.Future<_i2.Either<_i12.Failure, _i2.Unit>> clearSearchHistory(
          {required String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearSearchHistory,
          [],
          {#userId: userId},
        ),
        returnValue: _i4.Future<_i2.Either<_i12.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i12.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #clearSearchHistory,
            [],
            {#userId: userId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i12.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>> getById(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>>.value(
                _FakeEither_0<_i9.AppFailure, _i11.PlanEntity?>(
          this,
          Invocation.method(
            #getById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>> getAll({
    int? limit,
    String? lastDocumentId,
    Map<String, dynamic>? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
          {
            #limit: limit,
            #lastDocumentId: lastDocumentId,
            #filters: filters,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>.value(
                _FakeEither_0<_i9.AppFailure, List<_i11.PlanEntity>>(
          this,
          Invocation.method(
            #getAll,
            [],
            {
              #limit: limit,
              #lastDocumentId: lastDocumentId,
              #filters: filters,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity>> create(
          _i11.PlanEntity? entity) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [entity],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity>>.value(
                _FakeEither_0<_i9.AppFailure, _i11.PlanEntity>(
          this,
          Invocation.method(
            #create,
            [entity],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity>> update(
          _i11.PlanEntity? entity) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [entity],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity>>.value(
                _FakeEither_0<_i9.AppFailure, _i11.PlanEntity>(
          this,
          Invocation.method(
            #update,
            [entity],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>> delete(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>>.value(
            _FakeEither_0<_i9.AppFailure, _i2.Unit>(
          this,
          Invocation.method(
            #delete,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>> search(
    Map<String, dynamic>? criteria, {
    int? limit,
    String? lastDocumentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [criteria],
          {
            #limit: limit,
            #lastDocumentId: lastDocumentId,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>.value(
                _FakeEither_0<_i9.AppFailure, List<_i11.PlanEntity>>(
          this,
          Invocation.method(
            #search,
            [criteria],
            {
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, bool>> exists(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #exists,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i9.AppFailure, bool>>.value(
            _FakeEither_0<_i9.AppFailure, bool>(
          this,
          Invocation.method(
            #exists,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, bool>>);

  @override
  _i4.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>> invalidateCache() =>
      (super.noSuchMethod(
        Invocation.method(
          #invalidateCache,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>>.value(
            _FakeEither_0<_i9.AppFailure, _i2.Unit>(
          this,
          Invocation.method(
            #invalidateCache,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>> refresh(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>>.value(
                _FakeEither_0<_i9.AppFailure, _i11.PlanEntity?>(
          this,
          Invocation.method(
            #refresh,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>> refreshAll(
          {Map<String, dynamic>? filters}) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshAll,
          [],
          {#filters: filters},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>.value(
                _FakeEither_0<_i9.AppFailure, List<_i11.PlanEntity>>(
          this,
          Invocation.method(
            #refreshAll,
            [],
            {#filters: filters},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, List<_i11.PlanEntity>>>);
}

/// A class which mocks [GetPlanByIdUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPlanByIdUseCase extends _i1.Mock
    implements _i13.GetPlanByIdUseCase {
  MockGetPlanByIdUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>> execute(
          String? planId) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [planId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>>.value(
                _FakeEither_0<_i9.AppFailure, _i11.PlanEntity?>(
          this,
          Invocation.method(
            #execute,
            [planId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>>);

  @override
  _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>> call(
          String? planId) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [planId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>>.value(
                _FakeEither_0<_i9.AppFailure, _i11.PlanEntity?>(
          this,
          Invocation.method(
            #call,
            [planId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i9.AppFailure, _i11.PlanEntity?>>);
}

/// A class which mocks [PlanBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlanBloc extends _i1.Mock implements _i14.PlanBloc {
  MockPlanBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.PlanState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakePlanState_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.PlanState);

  @override
  _i4.Stream<_i3.PlanState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i3.PlanState>.empty(),
      ) as _i4.Stream<_i3.PlanState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.StreamSubscription<T> listenStream<T>(
    String? tag,
    _i4.Stream<T>? stream,
    void Function(T)? onData, {
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listenStream,
          [
            tag,
            stream,
            onData,
          ],
          {
            #onError: onError,
            #onDone: onDone,
            #cancelOnError: cancelOnError,
          },
        ),
        returnValue: _FakeStreamSubscription_2<T>(
          this,
          Invocation.method(
            #listenStream,
            [
              tag,
              stream,
              onData,
            ],
            {
              #onError: onError,
              #onDone: onDone,
              #cancelOnError: cancelOnError,
            },
          ),
        ),
      ) as _i4.StreamSubscription<T>);

  @override
  bool cancelSubscription(String? tag) => (super.noSuchMethod(
        Invocation.method(
          #cancelSubscription,
          [tag],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> cancelAllSubscriptions() => (super.noSuchMethod(
        Invocation.method(
          #cancelAllSubscriptions,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void add(_i15.PlanEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i15.PlanEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i3.PlanState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i15.PlanEvent>(
    _i16.EventHandler<E, _i3.PlanState>? handler, {
    _i16.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i16.Transition<_i15.PlanEvent, _i3.PlanState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i16.Change<_i3.PlanState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i7.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_3(
          this,
          Invocation.getter(#app),
        ),
      ) as _i5.FirebaseApp);

  @override
  set app(_i5.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
        Invocation.setter(
          #customAuthDomain,
          customAuthDomain,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i4.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
          {#automaticHostMapping: automaticHostMapping},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i6.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue: _i4.Future<_i6.ActionCodeInfo>.value(_FakeActionCodeInfo_4(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i4.Future<_i6.ActionCodeInfo>);

  @override
  _i4.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i7.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<_i7.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.Stream<_i7.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i4.Stream<_i7.User?>.empty(),
      ) as _i4.Stream<_i7.User?>);

  @override
  _i4.Stream<_i7.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i4.Stream<_i7.User?>.empty(),
      ) as _i4.Stream<_i7.User?>);

  @override
  _i4.Stream<_i7.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i4.Stream<_i7.User?>.empty(),
      ) as _i4.Stream<_i7.User?>);

  @override
  _i4.Future<void> sendPasswordResetEmail({
    required String? email,
    _i6.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i6.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setPersistence(_i6.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i7.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<_i7.UserCredential> signInWithCredential(
          _i6.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<_i7.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<_i7.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<_i7.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<_i7.UserCredential> signInWithProvider(
          _i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<_i7.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i7.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i4.Future<_i7.ConfirmationResult>.value(_FakeConfirmationResult_6(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i4.Future<_i7.ConfirmationResult>);

  @override
  _i4.Future<_i7.UserCredential> signInWithPopup(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<void> signInWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i4.Future<String>.value(_i17.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i6.PhoneMultiFactorInfo? multiFactorInfo,
    required _i6.PhoneVerificationCompleted? verificationCompleted,
    required _i6.PhoneVerificationFailed? verificationFailed,
    required _i6.PhoneCodeSent? codeSent,
    required _i6.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i6.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> revokeTokenWithAuthorizationCode(
          String? authorizationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeTokenWithAuthorizationCode,
          [authorizationCode],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i7.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
      ) as bool);

  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
      ) as bool);

  @override
  _i6.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_7(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i6.UserMetadata);

  @override
  List<_i6.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i6.UserInfo>[],
      ) as List<_i6.UserInfo>);

  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
      ) as String);

  @override
  _i7.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_8(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i7.MultiFactor);

  @override
  _i4.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<_i6.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i4.Future<_i6.IdTokenResult>.value(_FakeIdTokenResult_9(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i4.Future<_i6.IdTokenResult>);

  @override
  _i4.Future<_i7.UserCredential> linkWithCredential(
          _i6.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<_i7.UserCredential> linkWithProvider(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<_i7.UserCredential> reauthenticateWithProvider(
          _i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<_i7.UserCredential> reauthenticateWithPopup(
          _i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<void> reauthenticateWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i7.UserCredential> linkWithPopup(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<void> linkWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i7.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i7.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i4.Future<_i7.ConfirmationResult>.value(_FakeConfirmationResult_6(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i4.Future<_i7.ConfirmationResult>);

  @override
  _i4.Future<_i7.UserCredential> reauthenticateWithCredential(
          _i6.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue: _i4.Future<_i7.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i4.Future<_i7.UserCredential>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> sendEmailVerification(
          [_i6.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i7.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i4.Future<_i7.User>.value(_FakeUser_10(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i4.Future<_i7.User>);

  @override
  _i4.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updatePhoneNumber(
          _i6.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i6.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
