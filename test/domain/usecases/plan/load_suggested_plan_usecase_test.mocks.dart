// Mocks generated by Mockito 5.4.5 from annotations
// in quien_para/test/domain/usecases/plan/load_suggested_plan_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:quien_para/domain/entities/failure.dart' as _i8;
import 'package:quien_para/domain/entities/plan/plan_entity.dart' as _i7;
import 'package:quien_para/domain/entities/plan/plan_with_creator_entity.dart'
    as _i6;
import 'package:quien_para/domain/failures/app_failures.dart' as _i5;
import 'package:quien_para/domain/repositories/plan/plan_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [PlanRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlanRepository extends _i1.Mock implements _i3.PlanRepository {
  MockPlanRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i2.Either<_i5.AppFailure, List<_i6.PlanWithCreatorEntity>>>
      getPlansWithCreators() => (super.noSuchMethod(
            Invocation.method(#getPlansWithCreators, []),
            returnValue: _i4.Stream<
                _i2.Either<_i5.AppFailure,
                    List<_i6.PlanWithCreatorEntity>>>.empty(),
          ) as _i4.Stream<
              _i2.Either<_i5.AppFailure, List<_i6.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>> matchPlan(String? planId) =>
      (super.noSuchMethod(
        Invocation.method(#matchPlan, [planId]),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>.value(
          _FakeEither_0<_i5.AppFailure, _i2.Unit>(
            this,
            Invocation.method(#matchPlan, [planId]),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>> unlikePlan(String? planId) =>
      (super.noSuchMethod(
        Invocation.method(#unlikePlan, [planId]),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>.value(
          _FakeEither_0<_i5.AppFailure, _i2.Unit>(
            this,
            Invocation.method(#unlikePlan, [planId]),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>> getPlansByUserId(
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#getPlansByUserId, [userId]),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>.value(
          _FakeEither_0<_i5.AppFailure, List<_i7.PlanEntity>>(
            this,
            Invocation.method(#getPlansByUserId, [userId]),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>> getParticipatingPlans(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(#getParticipatingPlans, [userId]),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>.value(
          _FakeEither_0<_i5.AppFailure, List<_i7.PlanEntity>>(
            this,
            Invocation.method(#getParticipatingPlans, [userId]),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>);

  @override
  _i4.Stream<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>
      getOtherUserPlansStream(
              {required String? currentUserId, int? limit = 20}) =>
          (super.noSuchMethod(
            Invocation.method(#getOtherUserPlansStream, [], {
              #currentUserId: currentUserId,
              #limit: limit,
            }),
            returnValue: _i4.Stream<
                _i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>.empty(),
          ) as _i4.Stream<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>> refreshOtherUserPlans({
    required String? currentUserId,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#refreshOtherUserPlans, [], {
          #currentUserId: currentUserId,
          #limit: limit,
        }),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>.value(
          _FakeEither_0<_i5.AppFailure, _i2.Unit>(
            this,
            Invocation.method(#refreshOtherUserPlans, [], {
              #currentUserId: currentUserId,
              #limit: limit,
            }),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>);

  @override
  _i4.Future<
      _i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>> getPlansByCategory(
          String? category,
          {int? limit,
          String? lastDocumentId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlansByCategory,
          [category],
          {#limit: limit, #lastDocumentId: lastDocumentId},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>.value(
          _FakeEither_0<_i5.AppFailure, List<_i7.PlanEntity>>(
            this,
            Invocation.method(
              #getPlansByCategory,
              [category],
              {#limit: limit, #lastDocumentId: lastDocumentId},
            ),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>> getNearbyPlans({
    required double? latitude,
    required double? longitude,
    required double? radiusKm,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getNearbyPlans, [], {
          #latitude: latitude,
          #longitude: longitude,
          #radiusKm: radiusKm,
          #limit: limit,
        }),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>.value(
          _FakeEither_0<_i5.AppFailure, List<_i7.PlanEntity>>(
            this,
            Invocation.method(#getNearbyPlans, [], {
              #latitude: latitude,
              #longitude: longitude,
              #radiusKm: radiusKm,
              #limit: limit,
            }),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>> getPopularPlans({
    int? limit,
    String? lastDocumentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getPopularPlans, [], {
          #limit: limit,
          #lastDocumentId: lastDocumentId,
        }),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>.value(
          _FakeEither_0<_i5.AppFailure, List<_i7.PlanEntity>>(
            this,
            Invocation.method(#getPopularPlans, [], {
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            }),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>> getRecommendedPlans(
          {required String? userId, int? limit}) =>
      (super.noSuchMethod(
        Invocation.method(#getRecommendedPlans, [], {
          #userId: userId,
          #limit: limit,
        }),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>.value(
          _FakeEither_0<_i5.AppFailure, List<_i7.PlanEntity>>(
            this,
            Invocation.method(#getRecommendedPlans, [], {
              #userId: userId,
              #limit: limit,
            }),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>> searchPlansByText(
          String? searchText,
          {int? limit,
          String? lastDocumentId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPlansByText,
          [searchText],
          {#limit: limit, #lastDocumentId: lastDocumentId},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>.value(
          _FakeEither_0<_i5.AppFailure, List<_i7.PlanEntity>>(
            this,
            Invocation.method(
              #searchPlansByText,
              [searchText],
              {#limit: limit, #lastDocumentId: lastDocumentId},
            ),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>
      searchPlans({
    required String? query,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(#searchPlans, [], {
              #query: query,
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            }),
            returnValue: _i4.Future<
                _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>.value(
              _FakeEither_0<_i8.Failure, List<_i6.PlanWithCreatorEntity>>(
                this,
                Invocation.method(#searchPlans, [], {
                  #query: query,
                  #limit: limit,
                  #lastDocumentId: lastDocumentId,
                }),
              ),
            ),
          ) as _i4.Future<
              _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<String>>> getSearchSuggestions({
    required String? query,
    int? limit = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getSearchSuggestions, [], {
          #query: query,
          #limit: limit,
        }),
        returnValue: _i4.Future<_i2.Either<_i8.Failure, List<String>>>.value(
          _FakeEither_0<_i8.Failure, List<String>>(
            this,
            Invocation.method(#getSearchSuggestions, [], {
              #query: query,
              #limit: limit,
            }),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i8.Failure, List<String>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>
      filterPlansByLocation({
    required double? latitude,
    required double? longitude,
    required double? radiusKm,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(#filterPlansByLocation, [], {
              #latitude: latitude,
              #longitude: longitude,
              #radiusKm: radiusKm,
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            }),
            returnValue: _i4.Future<
                _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>.value(
              _FakeEither_0<_i8.Failure, List<_i6.PlanWithCreatorEntity>>(
                this,
                Invocation.method(#filterPlansByLocation, [], {
                  #latitude: latitude,
                  #longitude: longitude,
                  #radiusKm: radiusKm,
                  #limit: limit,
                  #lastDocumentId: lastDocumentId,
                }),
              ),
            ),
          ) as _i4.Future<
              _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, Map<String, dynamic>>> getCityCoordinates(
    String? cityName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#getCityCoordinates, [cityName]),
        returnValue:
            _i4.Future<_i2.Either<_i8.Failure, Map<String, dynamic>>>.value(
          _FakeEither_0<_i8.Failure, Map<String, dynamic>>(
            this,
            Invocation.method(#getCityCoordinates, [cityName]),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i8.Failure, Map<String, dynamic>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>
      filterPlansByDateRange({
    required DateTime? startDate,
    required DateTime? endDate,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(#filterPlansByDateRange, [], {
              #startDate: startDate,
              #endDate: endDate,
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            }),
            returnValue: _i4.Future<
                _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>.value(
              _FakeEither_0<_i8.Failure, List<_i6.PlanWithCreatorEntity>>(
                this,
                Invocation.method(#filterPlansByDateRange, [], {
                  #startDate: startDate,
                  #endDate: endDate,
                  #limit: limit,
                  #lastDocumentId: lastDocumentId,
                }),
              ),
            ),
          ) as _i4.Future<
              _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>
      filterPlansByCategory({
    required String? category,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(#filterPlansByCategory, [], {
              #category: category,
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            }),
            returnValue: _i4.Future<
                _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>.value(
              _FakeEither_0<_i8.Failure, List<_i6.PlanWithCreatorEntity>>(
                this,
                Invocation.method(#filterPlansByCategory, [], {
                  #category: category,
                  #limit: limit,
                  #lastDocumentId: lastDocumentId,
                }),
              ),
            ),
          ) as _i4.Future<
              _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>
      filterPlansByMultipleCategories({
    required List<String>? categories,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(#filterPlansByMultipleCategories, [], {
              #categories: categories,
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            }),
            returnValue: _i4.Future<
                _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>.value(
              _FakeEither_0<_i8.Failure, List<_i6.PlanWithCreatorEntity>>(
                this,
                Invocation.method(#filterPlansByMultipleCategories, [], {
                  #categories: categories,
                  #limit: limit,
                  #lastDocumentId: lastDocumentId,
                }),
              ),
            ),
          ) as _i4.Future<
              _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>
      getPopularPlansByCategory({required String? category, int? limit = 10}) =>
          (super.noSuchMethod(
            Invocation.method(#getPopularPlansByCategory, [], {
              #category: category,
              #limit: limit,
            }),
            returnValue: _i4.Future<
                _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>.value(
              _FakeEither_0<_i8.Failure, List<_i6.PlanWithCreatorEntity>>(
                this,
                Invocation.method(#getPopularPlansByCategory, [], {
                  #category: category,
                  #limit: limit,
                }),
              ),
            ),
          ) as _i4.Future<
              _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<String>>> getSuggestedCategories({
    required String? userId,
    int? limit = 3,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getSuggestedCategories, [], {
          #userId: userId,
          #limit: limit,
        }),
        returnValue: _i4.Future<_i2.Either<_i8.Failure, List<String>>>.value(
          _FakeEither_0<_i8.Failure, List<String>>(
            this,
            Invocation.method(#getSuggestedCategories, [], {
              #userId: userId,
              #limit: limit,
            }),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i8.Failure, List<String>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>
      searchPlansAdvanced({
    String? query,
    String? category,
    double? latitude,
    double? longitude,
    double? radiusKm,
    DateTime? startDate,
    DateTime? endDate,
    int? limit = 20,
    String? lastDocumentId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(#searchPlansAdvanced, [], {
              #query: query,
              #category: category,
              #latitude: latitude,
              #longitude: longitude,
              #radiusKm: radiusKm,
              #startDate: startDate,
              #endDate: endDate,
              #limit: limit,
              #lastDocumentId: lastDocumentId,
            }),
            returnValue: _i4.Future<
                _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>.value(
              _FakeEither_0<_i8.Failure, List<_i6.PlanWithCreatorEntity>>(
                this,
                Invocation.method(#searchPlansAdvanced, [], {
                  #query: query,
                  #category: category,
                  #latitude: latitude,
                  #longitude: longitude,
                  #radiusKm: radiusKm,
                  #startDate: startDate,
                  #endDate: endDate,
                  #limit: limit,
                  #lastDocumentId: lastDocumentId,
                }),
              ),
            ),
          ) as _i4.Future<
              _i2.Either<_i8.Failure, List<_i6.PlanWithCreatorEntity>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, _i2.Unit>> saveSearchToHistory({
    required String? userId,
    required String? query,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#saveSearchToHistory, [], {
          #userId: userId,
          #query: query,
        }),
        returnValue: _i4.Future<_i2.Either<_i8.Failure, _i2.Unit>>.value(
          _FakeEither_0<_i8.Failure, _i2.Unit>(
            this,
            Invocation.method(#saveSearchToHistory, [], {
              #userId: userId,
              #query: query,
            }),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i8.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<String>>> getSearchHistory({
    required String? userId,
    int? limit = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getSearchHistory, [], {
          #userId: userId,
          #limit: limit,
        }),
        returnValue: _i4.Future<_i2.Either<_i8.Failure, List<String>>>.value(
          _FakeEither_0<_i8.Failure, List<String>>(
            this,
            Invocation.method(#getSearchHistory, [], {
              #userId: userId,
              #limit: limit,
            }),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i8.Failure, List<String>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, _i2.Unit>> clearSearchHistory({
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#clearSearchHistory, [], {#userId: userId}),
        returnValue: _i4.Future<_i2.Either<_i8.Failure, _i2.Unit>>.value(
          _FakeEither_0<_i8.Failure, _i2.Unit>(
            this,
            Invocation.method(#clearSearchHistory, [], {#userId: userId}),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i8.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity?>> getById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(#getById, [id]),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity?>>.value(
          _FakeEither_0<_i5.AppFailure, _i7.PlanEntity?>(
            this,
            Invocation.method(#getById, [id]),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity?>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>> getAll({
    int? limit,
    String? lastDocumentId,
    Map<String, dynamic>? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getAll, [], {
          #limit: limit,
          #lastDocumentId: lastDocumentId,
          #filters: filters,
        }),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>.value(
          _FakeEither_0<_i5.AppFailure, List<_i7.PlanEntity>>(
            this,
            Invocation.method(#getAll, [], {
              #limit: limit,
              #lastDocumentId: lastDocumentId,
              #filters: filters,
            }),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity>> create(
    _i7.PlanEntity? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#create, [entity]),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity>>.value(
          _FakeEither_0<_i5.AppFailure, _i7.PlanEntity>(
            this,
            Invocation.method(#create, [entity]),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity>> update(
    _i7.PlanEntity? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#update, [entity]),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity>>.value(
          _FakeEither_0<_i5.AppFailure, _i7.PlanEntity>(
            this,
            Invocation.method(#update, [entity]),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>> delete(String? id) =>
      (super.noSuchMethod(
        Invocation.method(#delete, [id]),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>.value(
          _FakeEither_0<_i5.AppFailure, _i2.Unit>(
            this,
            Invocation.method(#delete, [id]),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>> search(
    Map<String, dynamic>? criteria, {
    int? limit,
    String? lastDocumentId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [criteria],
          {#limit: limit, #lastDocumentId: lastDocumentId},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>.value(
          _FakeEither_0<_i5.AppFailure, List<_i7.PlanEntity>>(
            this,
            Invocation.method(
              #search,
              [criteria],
              {#limit: limit, #lastDocumentId: lastDocumentId},
            ),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, bool>> exists(String? id) =>
      (super.noSuchMethod(
        Invocation.method(#exists, [id]),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, bool>>.value(
          _FakeEither_0<_i5.AppFailure, bool>(
            this,
            Invocation.method(#exists, [id]),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, bool>>);

  @override
  _i4.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>> invalidateCache() =>
      (super.noSuchMethod(
        Invocation.method(#invalidateCache, []),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>.value(
          _FakeEither_0<_i5.AppFailure, _i2.Unit>(
            this,
            Invocation.method(#invalidateCache, []),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity?>> refresh(String? id) =>
      (super.noSuchMethod(
        Invocation.method(#refresh, [id]),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity?>>.value(
          _FakeEither_0<_i5.AppFailure, _i7.PlanEntity?>(
            this,
            Invocation.method(#refresh, [id]),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i7.PlanEntity?>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>> refreshAll({
    Map<String, dynamic>? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#refreshAll, [], {#filters: filters}),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>.value(
          _FakeEither_0<_i5.AppFailure, List<_i7.PlanEntity>>(
            this,
            Invocation.method(#refreshAll, [], {#filters: filters}),
          ),
        ),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.PlanEntity>>>);
}
