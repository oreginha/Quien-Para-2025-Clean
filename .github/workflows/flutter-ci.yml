name: Flutter CI & Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FLUTTER_VERSION: '3.24.0'  # Stable version with Dart 3.5.0 compatible with flutter_lints ^5.0.0
  JAVA_VERSION: '17'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true  # Enable cache for better performance
        
    - name: Verify Flutter and Dart versions
      run: |
        flutter --version
        dart --version
        echo "Dart SDK location: $(which dart)"
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .
      
    - name: Analyze project source
      run: flutter analyze --no-fatal-infos  # Less strict to avoid blocking on warnings
      
    - name: Run tests
      run: flutter test --coverage --test-randomize-ordering-seed random
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build web
      run: flutter build web --release --web-renderer html
      
    - name: Upload web artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web/
        retention-days: 7

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build APK
      run: flutter build apk --release
      
    - name: Build App Bundle
      run: flutter build appbundle --release
      
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30
        
    - name: Upload AAB artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: build/app/outputs/bundle/release/app-release.aab
        retention-days: 30

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
        
    - name: Build iOS (No Codesign)
      run: |
        flutter build ios --release --no-codesign
        
    - name: Upload iOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: build/ios/iphoneos/
        retention-days: 7

  deploy-web:
    name: Deploy to Firebase Hosting
    runs-on: ubuntu-latest
    needs: [build-web]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download web artifacts
      uses: actions/download-artifact@v4
      with:
        name: web-build
        path: build/web/
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Deploy to Firebase Hosting
      run: |
        firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }} --project planing-931b8
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-android:
    name: Deploy Android to Firebase App Distribution
    runs-on: ubuntu-latest
    needs: [build-android]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Android artifacts
      uses: actions/download-artifact@v4
      with:
        name: android-apk
        path: ./
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Deploy to Firebase App Distribution
      run: |
        firebase appdistribution:distribute app-release.apk \
          --app ${{ secrets.FIREBASE_ANDROID_APP_ID }} \
          --groups "developers,testers" \
          --release-notes "Automated build from commit ${{ github.sha }}" \
          --token ${{ secrets.FIREBASE_TOKEN }}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  notify-status:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [deploy-web, deploy-android]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.deploy-web.result == 'success' && needs.deploy-android.result == 'success'
      run: |
        echo "üöÄ Deployment completed successfully!"
        echo "Web: Deployed to Firebase Hosting"
        echo "Android: Deployed to Firebase App Distribution"
        
    - name: Notify Failure
      if: needs.deploy-web.result == 'failure' || needs.deploy-android.result == 'failure'
      run: |
        echo "‚ùå Deployment failed!"
        echo "Web status: ${{ needs.deploy-web.result }}"
        echo "Android status: ${{ needs.deploy-android.result }}"
        exit 1
